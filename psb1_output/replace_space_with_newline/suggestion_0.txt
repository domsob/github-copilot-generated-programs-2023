Synthesizing 10/10 solutions (Duplicates hidden)

=======
Suggestion 1

def myfunc(str1: str):
    str1 = str1.replace(' ', '\n')
    return str1, len(str1.replace('\n', ''))

=======
Suggestion 2

def myfunc(str1: str):
    str1 = str1.replace(' ', '\n')
    return str1, len(str1) - str1.count('\n')

=======
Suggestion 3

def myfunc(str1: str):
    str2 = str1.replace(" ", "\n")
    count = len(str1) - str1.count(" ")
    return str2, count

=======
Suggestion 4

def myfunc(str1: str):
    count = 0
    for i in str1:
        if i != " ":
            count += 1
    return str1.replace(" ", "\n"), count

=======
Suggestion 5

def myfunc(str1: str):
    str2 = str1.replace(" ", "\n")
    return str2, len(str2)

=======
Suggestion 6

def myfunc(str1: str):
    # str1 = str1.replace(" ", "\n")
    # return str1, len(str1.replace("\n", ""))
    return str1.replace(" ", "\n"), len(str1.replace("\n", ""))

=======
Suggestion 7

def myfunc(str1: str):
    new_str = ""
    for i in str1:
        if i == " ":
            new_str += "\n"
        else:
            new_str += i
    return new_str, len(str1.replace(" ", ""))

=======
Suggestion 8

def myfunc(str1: str):
    newStr = ""
    count = 0
    for i in str1:
        if i == " ":
            newStr += "\n"
        else:
            newStr += i
            count += 1
    return newStr, count

=======
Suggestion 9

def myfunc(str1: str):
    count = 0
    for i in str1:
        if i != ' ':
            count += 1
    return str1.replace(' ', '\n'), count
