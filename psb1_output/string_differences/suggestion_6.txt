Synthesizing 10/10 solutions

=======
Suggestion 1

def myfunc(str1: str, str2: str):
    if len(str1) > len(str2):
        str1, str2 = str2, str1
    for i in range(len(str1)):
        if str1[i] != str2[i]:
            print(i, str1[i], str2[i])
    return

=======
Suggestion 2

def myfunc(str1: str, str2: str):
    # Write your code here
    pass

=======
Suggestion 3

def myfunc(str1: str, str2: str):
    i = 0
    while i < len(str1) and i < len(str2):
        if str1[i] != str2[i]:
            print(i, str1[i], str2[i])
        i += 1

=======
Suggestion 4

def myfunc(str1: str, str2: str):
    # Fill in your code here
    return ""

=======
Suggestion 5

def myfunc(str1: str, str2: str):
    if len(str1) > len(str2):
        str1, str2 = str2, str1
    for i, (a, b) in enumerate(zip(str1, str2)):
        if a != b:
            print(i, a, b, sep=" ", end="\n")
    return None

=======
Suggestion 6

def myfunc(str1: str, str2: str):
    if len(str1) > len(str2):
        length = len(str2)
    else:
        length = len(str1)
    for i in range(length):
        if str1[i] != str2[i]:
            print(i, str1[i], str2[i])

=======
Suggestion 7

def myfunc(str1: str, str2: str):
  result = []
  for i in range(min(len(str1), len(str2))):
    if str1[i] != str2[i]:
      result.append(f"{i} {str1[i]} {str2[i]}")
  return "\n".join(result)

=======
Suggestion 8

def myfunc(str1: str, str2: str):
    if len(str1) < len(str2):
        shorter = str1
    else:
        shorter = str2
    result = ""
    for i in range(len(shorter)):
        if str1[i] != str2[i]:
            result += str(i) + " " + str1[i] + " " + str2[i] + "\n"
    return result

=======
Suggestion 9

def myfunc(str1: str, str2: str):
    # Your code goes here
    return

=======
Suggestion 10

def myfunc(str1: str, str2: str):
    # your code here
    pass
