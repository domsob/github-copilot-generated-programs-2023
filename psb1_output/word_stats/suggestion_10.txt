Synthesizing 9/10 solutions (Duplicates hidden)

=======
Suggestion 1

def myfunc(str1: str):)->list:
    str1 = str1.replace('?','.')
    str1 = str1.replace('!'

=======
Suggestion 2

def myfunc(str1: str):) -> list:
    pass

=======
Suggestion 3

def myfunc(str1: str):)->list:
    """
    Given a string, return a list containing the number of words with n characters 
    for n from 1 to the length of the longest word.
    Additionally, return the number of sentences and the average sentence length.
    A word is any string of consecutive non-whitespace characters (including 
    sentence terminators). Every string will contain at least one sentence terminator 
    (period, exclamation point, or question mark). The average sentence length is 
    the number of words in the string divided by the number of sentence terminator characters.
    """
    # 1. split the string into words
    words = str1.split()
    # 2. count the number of words with n characters
    # 3. count the number of sentences
    # 4. compute the average sentence length
    # 5. return the list
    pass

=======
Suggestion 4

def myfunc(str1: str):)-> list:
    str2 = str1.split()
    str3 = []
    for i in str2:
        str3.append(len(i))
    return str3

=======
Suggestion 5

def myfunc(str1: str):) -> list:
    """Return list of number of words with n characters for n from 1 to length of longest word, 
    number of sentences, and average sentence length."""
    # Initialize variables
    words = [] # list of words in str1
    n = 0 # number of words with n characters for n from 1 to length of longest word
    sentences = 0 # number of sentences in str1
    sentence_length = 0 # average sentence length in str1

    # Split str1 into list of words
    words = str1.split()

    # Iterate through list of words
    for word in words:
        # Increment n if word has n characters
        if len(word) == n:
            n += 1
        # Increment sentences if word ends with sentence terminator
        if word.endswith('.') or word.endswith('!') or word.endswith('?'):
            sentences += 1

    # Calculate average sentence length
    sentence_length = len(words) / sentences

    # Return list of number of words with n characters for n from 1 to length of longest word, 
    # number of sentences, and average sentence length
    return [n, sentences, sentence_length]

=======
Suggestion 6

def myfunc(str1: str):)->list:
    """Given a string, return a list containing the number of words with n characters 
    for n from 1 to the length of the longest word.
    Additionally, return the number of sentences and the average sentence length.
    A word is any string of consecutive non-whitespace characters (including 
    sentence terminators). Every string will contain at least one sentence terminator 
    (period, exclamation point, or question mark). The average sentence length is 
    the number of words in the string divided by the number of sentence terminator characters.

    Args:
        str1 (str): [description]

=======
Suggestion 7

def myfunc(str1: str):)->list:
    # your code here
    return

=======
Suggestion 8

def myfunc(str1: str):)->list:
    l = len(str1)
    str1 = str1.replace('?', '.')
    str1 = str1.replace('!', '.')
    str1 = str1.replace('..', '.')
    str1 = str1.replace('...', '.')
    str1 = str1.replace('....', '.')
    str1 = str1.replace('.....', '.')
    str1 = str1.replace('......', '.')
    str1 = str1.replace('.......', '.')
    str1 = str1.replace('........', '.')
    str1 = str1.replace('.........', '.')
    str1 = str1.replace('..........', '.')
    str1 = str1.replace('...........', '.')
    str1 = str1.replace('............', '.')
    str1 = str1.replace('.............', '.')
    str1 = str1.replace('..............', '.')
    str1 = str1.replace('...............', '.')
    str1 = str1.replace('................', '.')
    str1 = str1.replace('.................', '.')
    str1 = str1.replace('..................', '.')
    str1 = str1.replace('...................', '.')
    str1 = str1.replace('....................', '.')
    str1 = str1.replace('.....................', '.')
    str1 = str1.replace('......................', '.')
    str1 = str1.replace('.......................', '.')
    str1 = str1.replace('........................', '.')
    str1 = str1.replace('.........................', '.')
    str1 = str1.replace('..........................', '.')
    str1 = str1.replace('...........................', '.')
    str1 = str1.replace('............................', '.')
    str1 = str1.replace('.............................', '.')
    str1 = str1.replace('..............................', '.')
    str1 = str1.replace('...............................', '.')
    str1 = str1.replace('................................', '.')
    str1 = str1.replace('.................................', '.')
    str1 = str1.replace('..................................', '.')
    str1 = str1.replace('...................................', '.')
    str1 = str1.replace('....................................', '.')
    str1 = str1.replace('.....................................', '.')
    str1 = str1.replace('......................................', '.')
    str1
