Synthesizing 10/10 solutions

=======
Suggestion 1

def myfunc(int1: int):
    count = 1
    while int1 != 1:
        if int1 % 2 == 0:
            int1 = int1 / 2
        else:
            int1 = int1 * 3 + 1
        count += 1
    return count

=======
Suggestion 2

def myfunc(int1: int):
    count = 1
    while int1 != 1:
        if int1 % 2 == 0:
            int1 = int1 / 2
        else:
            int1 = 3 * int1 + 1
        count += 1
    return count

=======
Suggestion 3

def myfunc(int1: int):
    if int1 < 1:
        return 0
    else:
        return 1 + myfunc(int1 // 2 if int1 % 2 == 0 else int1 * 3 + 1)

=======
Suggestion 4

def myfunc(int1: int):
    count = 1
    while int1 != 1:
        if int1 % 2 == 0:
            int1 = int1 / 2
        else:
            int1 = (3 * int1) + 1
        count += 1
    return count

=======
Suggestion 5

def myfunc(int1: int):
    '''Given an integer, find the number of terms in the Collatz (hailstone) sequence starting from that integer.'''
    # YOUR CODE HERE
    return 0

=======
Suggestion 6

def myfunc(int1: int):
    count = 0
    while int1 != 1:
        if int1 % 2 == 0:
            int1 = int1 / 2
            count += 1
        else:
            int1 = int1 * 3 + 1
            count += 1
    return count

=======
Suggestion 7

def myfunc(int1: int):
    count = 1
    while int1 != 1:
        if int1 % 2 == 0:
            int1 = int1 // 2
        else:
            int1 = int1 * 3 + 1
        count += 1
    return count

=======
Suggestion 8

def myfunc(int1: int):
    """
    >>> myfunc(3)
    8
    >>> myfunc(5)
    6
    >>> myfunc(7)
    18
    >>> myfunc(9)
    20
    >>> myfunc(11)
    15
    """
    count = 0
    while int1 != 1:
        if int1 % 2 == 0:
            int1 = int1 // 2
            count += 1
        else:
            int1 = int1 * 3 + 1
            count += 1
    return count

=======
Suggestion 9

def myfunc(int1: int):
    """
    >>> myfunc(1)
    1
    >>> myfunc(2)
    2
    >>> myfunc(3)
    8
    >>> myfunc(4)
    3
    """
    count = 1
    while int1 != 1:
        if int1 % 2 == 0:
            int1 = int1 / 2
        else:
            int1 = int1 * 3 + 1
        count += 1
    return count

=======
Suggestion 10

def myfunc(int1: int):
    if int1 == 1:
        return 1
    elif int1 % 2 == 0:
        return 1 + myfunc(int1 // 2)
    else:
        return 1 + myfunc(int1 * 3 + 1)
