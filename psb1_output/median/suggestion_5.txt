Synthesizing 10/10 solutions

=======
Suggestion 1

def myfunc(int1: int, int2: int, int3: int):
    if int1 > int2:
        if int2 > int3:
            return int2
        elif int1 > int3:
            return int3
        else:
            return int1
    elif int1 > int3:
        return int1
    elif int2 > int3:
        return int3
    else:
        return int2

=======
Suggestion 2

def myfunc(int1: int, int2: int, int3: int):
    if int1 > int2:
        if int1 < int3:
            return int1
        elif int2 > int3:
            return int2
        else:
            return int3
    else:
        if int1 > int3:
            return int1
        elif int2 < int3:
            return int2
        else:
            return int3

=======
Suggestion 3

def myfunc(int1: int, int2: int, int3: int):
    if int1 > int2:
        if int2 > int3:
            return int2
        elif int1 > int3:
            return int3
        else:
            return int1
    else:
        if int1 > int3:
            return int1
        elif int2 > int3:
            return int3
        else:
            return int2

=======
Suggestion 4

def myfunc(int1: int, int2: int, int3: int):
    if int1 > int2:
        if int1 < int3:
            return int1
        elif int2 > int3:
            return int2
        else:
            return int3
    else:
        if int2 < int3:
            return int2
        elif int1 > int3:
            return int1
        else:
            return int3

=======
Suggestion 5

def myfunc(int1: int, int2: int, int3: int):
    if (int1 > int2 and int1 < int3) or (int1 < int2 and int1 > int3):
        return int1
    elif (int2 > int1 and int2 < int3) or (int2 < int1 and int2 > int3):
        return int2
    else:
        return int3

=======
Suggestion 6

def myfunc(int1: int, int2: int, int3: int):
    # Sort the three integers
    int_list = [int1, int2, int3]
    int_list.sort()

    # Return the middle value
    return int_list[1]

=======
Suggestion 7

def myfunc(int1: int, int2: int, int3: int):
    return sorted([int1, int2, int3])[1]

=======
Suggestion 8

def myfunc(int1: int, int2: int, int3: int):
    # Sort the three integers
    sorted_ints = sorted([int1, int2, int3])
    # Return the middle integer
    return sorted_ints[1]

=======
Suggestion 9

def myfunc(int1: int, int2: int, int3: int):
    # Sort the list.
    list1 = [int1, int2, int3]
    list1.sort()
    # Return the median.
    return list1[1]

=======
Suggestion 10

def myfunc(int1: int, int2: int, int3: int):
    """
    Return the median of 3 integers.

    >>> myfunc(1, 2, 3)
    2
    >>> myfunc(1, 3, 2)
    2
    >>> myfunc(2, 1, 3)
    2
    >>> myfunc(2, 3, 1)
    2
    >>> myfunc(3, 1, 2)
    2
    >>> myfunc(3, 2, 1)
    2
    """
    if int2 < int1 < int3 or int3 < int1 < int2:
        return int1
    elif int1 < int2 < int3 or int3 < int2 < int1:
        return int2
    else:
        return int3
