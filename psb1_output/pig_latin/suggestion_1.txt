Synthesizing 7/10 solutions (Duplicates hidden)

=======
Suggestion 1

def myfunc(str1: str):
    str2 = ""
    for i in str1.split():
        if i[0] in "aeiou":
            str2 += i + "ay "
        else:
            str2 += i[1:] + i[0] + "ay "
    return str2[:-1]

=======
Suggestion 2

def myfunc(str1: str):
    words = str1.split(" ")
    for i in range(len(words)):
        if words[i][0] in "aeiou":
            words[i] += "ay"
        else:
            words[i] = words[i][1:] + words[i][0] + "ay"
    return " ".join(words)

=======
Suggestion 3

def myfunc(str1: str):
    str1 = str1.split()
    for i in range(len(str1)):
        if str1[i][0] in "aeiou":
            str1[i] = str1[i] + "ay"
        else:
            str1[i] = str1[i][1:] + str1[i][0] + "ay"
    return " ".join(str1)

=======
Suggestion 4

def myfunc(str1: str):
    vowels = ["a", "e", "i", "o", "u"]
    words = str1.split(" ")
    new_words = []
    for word in words:
        if word[0] in vowels:
            new_words.append(word + "ay")
        else:
            new_words.append(word[1:] + word[0] + "ay")
    return " ".join(new_words)

=======
Suggestion 5

def myfunc(str1: str):
    if str1[0] == 'a' or str1[0] == 'e' or str1[0] == 'i' or str1[0] == 'o' or str1[0] == 'u':
        return str1 + 'ay'
    else:
        return str1[1:] + str1[0] + 'ay'

=======
Suggestion 6

def myfunc(str1: str):
    if str1[0] in 'aeiou':
        return str1 + 'ay'
    else:
        return str1[1:] + str1[0] + 'ay'
