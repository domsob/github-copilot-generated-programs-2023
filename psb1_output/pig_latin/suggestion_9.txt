Synthesizing 7/10 solutions

=======
Suggestion 1

def myfunc(str1: str):
    vowels = ['a', 'e', 'i', 'o', 'u']
    result = ''
    for word in str1.split(' '):
        if word[0] in vowels:
            result += word + 'ay '
        else:
            result += word[1:] + word[0] + 'ay '
    return result

=======
Suggestion 2

def myfunc(str1: str):
    res = ""
    for i in str1.split():
        if i[0] in "aeiou":
            res += i + "ay" + " "
        else:
            res += i[1:] + i[0] + "ay" + " "
    return res[:-1]

=======
Suggestion 3

def myfunc(str1: str):
    if str1[0] in 'aeiou':
        return str1 + 'ay'
    else:
        return str1[1:] + str1[0] + 'ay'

=======
Suggestion 4

def myfunc(str1: str):
    str1 = str1.split()
    str2 = []
    for i in str1:
        if i[0] in "aeiou":
            str2.append(i + "ay")
        else:
            str2.append(i[1:] + i[0] + "ay")
    return " ".join(str2)

=======
Suggestion 5

def myfunc(str1: str):
    vowels = ['a', 'e', 'i', 'o', 'u']
    words = str1.split(' ')
    new_words = []
    for word in words:
        if word[0] in vowels:
            new_words.append(word + 'ay')
        else:
            new_words.append(word[1:] + word[0] + 'ay')
    return ' '.join(new_words)

=======
Suggestion 6

def myfunc(str1: str):
    words = str1.split()
    for i in range(0, len(words)):
        if words[i][0] in ('a', 'e', 'i', 'o', 'u'):
            words[i] += 'ay'
        else:
            words[i] = words[i][1:] + words[i][0] + 'ay'
    return ' '.join(words)

=======
Suggestion 7

def myfunc(str1: str):
    str2 = str1.split()
    str3 = []
    for i in str2:
        if i[0] in 'aeiou':
            str3.append(i + 'ay')
        else:
            str3.append(i[1:] + i[0] + 'ay')
    return ' '.join(str3)
