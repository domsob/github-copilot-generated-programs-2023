Synthesizing 6/10 solutions

=======
Suggestion 1

def myfunc(str1: str):
    str1 = str1.split()
    str2 = ""
    for i in str1:
        if i[0] in "aeiou":
            str2 += i + "ay "
        else:
            str2 += i[1:] + i[0] + "ay "
    return str2

=======
Suggestion 2

def myfunc(str1: str):
    """
    :param str1: string
    :return: string
    """
    vowels = ['a', 'e', 'i', 'o', 'u']
    str2 = ""
    for word in str1.split():
        if word[0] in vowels:
            str2 += word + "ay "
        else:
            str2 += word[1:] + word[0] + "ay "
    return str2

=======
Suggestion 3

def myfunc(str1: str):
    str2 = ""
    for word in str1.split():
        if word[0] in "aeiou":
            str2 += word + "ay "
        else:
            str2 += word[1:] + word[0] + "ay "
    return str2[:-1]

=======
Suggestion 4

def myfunc(str1: str):
    words = str1.split(" ")
    result = []
    for word in words:
        if word[0] in "aeiou":
            result.append(word + "ay")
        else:
            result.append(word[1:] + word[0] + "ay")
    return " ".join(result)

=======
Suggestion 5

def myfunc(str1: str):
    str1 = str1.split()
    str2 = []
    for i in str1:
        if i[0] in "aeiou":
            str2.append(i + "ay")
        else:
            str2.append(i[1:] + i[0] + "ay")
    return " ".join(str2)

=======
Suggestion 6

def myfunc(str1: str):
    vowels = 'aeiou'
    str1 = str1.lower()
    str2 = str1.split()
    for i in range(len(str2)):
        if str2[i][0] in vowels:
            str2[i] = str2[i] + 'ay'
        else:
            str2[i] = str2[i][1:] + str2[i][0] + 'ay'
    return ' '.join(str2)
