Synthesizing 10/10 solutions (Duplicates hidden)

=======
Suggestion 1

def myfunc(int1: int):
    return sum([x**2 for x in range(1, int1+1)])

=======
Suggestion 2

def myfunc(int1: int):
    # sum = 0
    # for i in range(1, int1 + 1):
    #     sum += i ** 2
    # return sum
    return sum([i ** 2 for i in range(1, int1 + 1)])

=======
Suggestion 3

def myfunc(int1: int):
    total = 0
    for i in range(1, int1 + 1):
        total += i ** 2
    return total

=======
Suggestion 4

def myfunc(int1: int):
    sum = 0
    for i in range(1, int1 + 1):
        sum += i * i
    return sum

=======
Suggestion 5

def myfunc(int1: int):
    result = 0
    for i in range(1, int1 + 1):
        result += i * i
    return result

=======
Suggestion 6

def myfunc(int1: int):
    return sum([x*x for x in range(1, int1+1)])

=======
Suggestion 7

def myfunc(int1: int):
    if int1 <= 1:
        return int1
    else:
        return int1**2 + myfunc(int1 - 1)

=======
Suggestion 8

def myfunc(int1: int):
    """
    Given integer n, return the sum of squaring each integer in the range [1, n].
    :param int1: int
    :return: int
    """
    i = 1
    result = 0
    while i <= int1:
        result += i ** 2
        i += 1
    return result
