Synthesizing 10/10 solutions (Duplicates hidden)

=======
Suggestion 1

def myfunc(list1: list, list2: list):
    # Write your code here
    total_price = 0
    for i in range(len(list1)):
        total_price += list1[i] - (list1[i] * (list2[i] / 100))
    return total_price

=======
Suggestion 2

def myfunc(list1: list, list2: list):
    if len(list1) != len(list2):
        return "Invalid input"
    else:
        total = 0
        for i in range(len(list1)):
            total += list1[i] * (1 - list2[i] / 100)
        return total

=======
Suggestion 3

def myfunc(list1: list, list2: list):
    total = 0
    for i in range(len(list1)):
        total += list1[i] * (1 - list2[i] / 100)
    return total

=======
Suggestion 4

def myfunc(list1: list, list2: list):
    # if the two lists are not the same length, return -1
    if len(list1) != len(list2):
        return -1
    # if the two lists are the same length, zip the lists into a dictionary
    else:
        new_dict = dict(zip(list1, list2))
        # loop through the dictionary and calculate the total price
        total = 0
        for key, value in new_dict.items():
            # calculate the total price after discount
            price = key - (key * value)
            # add the price to the total price
            total = total + price
        return total

=======
Suggestion 5

def myfunc(list1: list, list2: list):
    total = 0
    for i in range(len(list1)):
        total += list1[i] - (list1[i] * (list2[i] / 100))
    return total

=======
Suggestion 6

def myfunc(list1: list, list2: list):
    return sum([i * (100 - j) / 100 for i, j in zip(list1, list2)])

=======
Suggestion 7

def myfunc(list1: list, list2: list):
    list3 = []
    for i in range(len(list1)):
        list3.append(list1[i]*(1-list2[i]/100))
    return sum(list3)

=======
Suggestion 8

def myfunc(list1: list, list2: list):
    return sum([list1[i] * (1 - list2[i] / 100) for i in range(len(list1))])
