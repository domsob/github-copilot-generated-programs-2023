Synthesizing 10/10 solutions

=======
Suggestion 1

def myfunc(int1: int):
    int1 = str(int1)
    str1 = ""
    for i in int1:
        str1 += str(int(i)**2)
    return int(str1)

=======
Suggestion 2

def myfunc(int1: int):
    str1 = str(int1)
    str2 = ""
    for i in str1:
        str2 = str2 + str(int(i) ** 2)
    return int(str2)

=======
Suggestion 3

def myfunc(int1: int):
    if int1 <= 0:
        return -1
    else:
        int1 = str(int1)
        int1 = list(int1)
        int1 = [int(x) for x in int1]
        int1 = [x ** 2 for x in int1]
        int1 = [str(x) for x in int1]
        int1 = ''.join(int1)
        return int1

=======
Suggestion 4

def myfunc(int1: int):
    int1 = str(int1)
    result = ''
    for i in range(len(int1)):
        result += str(int(int1[i]) ** 2)
    return int(result)

=======
Suggestion 5

def myfunc(int1: int):
    result = ''
    for i in str(int1):
        result += str(int(i)**2)
    return int(result)

=======
Suggestion 6

def myfunc(int1: int):
    # Convert number to string
    str1 = str(int1)
    # Create an empty string to store the returned value
    str2 = ""
    # Loop through each digit in the string
    for i in str1:
        # Convert the digit back to an integer
        int2 = int(i)
        # Square the integer
        int3 = int2 ** 2
        # Convert the squared integer back to a string
        str3 = str(int3)
        # Add the squared digit to the returned string
        str2 = str2 + str3
    # Return the string
    return str2

=======
Suggestion 7

def myfunc(int1: int):
    # Convert integer to string
    int1 = str(int1)
    # Initialize empty string
    str1 = ''
    # Iterate over string
    for i in int1:
        # Convert each character to integer and square it
        i = int(i) ** 2
        # Convert back to string and concatenate to str1
        str1 += str(i)
    # Return str1 as integer
    return int(str1)

=======
Suggestion 8

def myfunc(int1: int):
    # Convert the integer to a string
    int_string = str(int1)
    # Create an empty string to hold the result
    result = ''
    # Loop through the string
    for i in int_string:
        # Square each digit and concatenate the squares into the result string
        result += str(int(i) ** 2)
    # Return the result string
    return result

=======
Suggestion 9

def myfunc(int1: int):
    # Convert int to str
    str1 = str(int1)
    # Create empty list
    list1 = []
    # Loop through str1
    for i in str1:
        # Square each digit
        i = int(i)**2
        # Append to list
        list1.append(str(i))
    # Concatenate list into string
    str2 = ''.join(list1)
    # Return string
    return str2

=======
Suggestion 10

def myfunc(int1: int):
    int2 = str(int1)
    int3 = ""
    for i in int2:
        int3 += str(int(i) * int(i))
    return int(int3)
