Synthesizing 10/10 solutions (Duplicates hidden)

=======
Suggestion 1

def myfunc(str1: str):
    str1 = str1.split()
    for i in range(len(str1)):
        if len(str1[i]) >= 5:
            str1[i] = str1[i][::-1]
    return ' '.join(str1)

=======
Suggestion 2

def myfunc(str1: str):
    str2 = str1.split()
    str3 = []
    for i in str2:
        if len(i) >= 5:
            str3.append(i[::-1])
        else:
            str3.append(i)
    return ' '.join(str3)

=======
Suggestion 3

def myfunc(str1: str):
    return " ".join([i[::-1] if len(i) >= 5 else i for i in str1.split(" ")])

=======
Suggestion 4

def myfunc(str1: str):
    s = str1.split()
    for i in range(len(s)):
        if len(s[i]) >= 5:
            s[i] = s[i][::-1]
    return " ".join(s)

=======
Suggestion 5

def myfunc(str1: str):
    lst = str1.split()
    for i in range(len(lst)):
        if len(lst[i]) >= 5:
            lst[i] = lst[i][::-1]
    return " ".join(lst)

=======
Suggestion 6

def myfunc(str1: str):
    str1 = str1.split(" ")
    for i in range(len(str1)):
        if len(str1[i]) >= 5:
            str1[i] = str1[i][::-1]
    return " ".join(str1)

=======
Suggestion 7

def myfunc(str1: str):
    str2 = ""
    str3 = ""
    for i in range(len(str1)):
        if str1[i] != " ":
            str2 += str1[i]
        elif str1[i] == " ":
            if len(str2) >= 5:
                str2 = str2[::-1]
            str3 += str2 + " "
            str2 = ""
    if len(str2) >= 5:
        str2 = str2[::-1]
    str3 += str2
    return str3

=======
Suggestion 8

def myfunc(str1: str):
    str2 = str1.split()
    str3 = []
    for i in str2:
        if len(i) >= 5:
            str3.append(i[::-1])
        else:
            str3.append(i)
    str4 = ' '.join(str3)
    return str4
