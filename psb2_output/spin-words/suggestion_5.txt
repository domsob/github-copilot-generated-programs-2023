Synthesizing 10/10 solutions (Duplicates hidden)

=======
Suggestion 1

def myfunc(str1: str):
    str1 = str1.split(" ")
    newstr = ""
    for i in str1:
        if len(i) >= 5:
            newstr += i[::-1] + " "
        else:
            newstr += i + " "
    return newstr

=======
Suggestion 2

def myfunc(str1: str):
    str2 = str1.split()
    for i in range(len(str2)):
        if len(str2[i]) >= 5:
            str2[i] = str2[i][::-1]
    return ' '.join(str2)

=======
Suggestion 3

def myfunc(str1: str):
    str2 = ""
    str1 = str1.split()
    for i in str1:
        if len(i) >= 5:
            i = i[::-1]
        str2 += i + " "
    return str2

=======
Suggestion 4

def myfunc(str1: str):
    str1 = str1.split()
    for i in range(len(str1)):
        if len(str1[i]) >= 5:
            str1[i] = str1[i][::-1]
    return ' '.join(str1)

=======
Suggestion 5

def myfunc(str1: str):
    return " ".join([word[::-1] if len(word) >= 5 else word for word in str1.split(" ")])

=======
Suggestion 6

def myfunc(str1: str):
    words = str1.split(' ')
    for i in range(len(words)):
        if len(words[i]) >= 5:
            words[i] = words[i][::-1]
    return ' '.join(words)

=======
Suggestion 7

def myfunc(str1: str):
    res = []
    for word in str1.split():
        if len(word) >= 5:
            res.append(word[::-1])
        else:
            res.append(word)
    return ' '.join(res)

=======
Suggestion 8

def myfunc(str1: str):
    str2 = str1.split()
    str3 = []
    for i in str2:
        if len(i) >= 5:
            str3.append(i[::-1])
        else:
            str3.append(i)
    return ' '.join(str3)

=======
Suggestion 9

def myfunc(str1: str):
    str2 = ""
    for word in str1.split():
        if len(word) >= 5:
            str2 += word[::-1] + " "
        else:
            str2 += word + " "
    return str2.strip()
