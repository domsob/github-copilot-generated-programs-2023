Synthesizing 8/10 solutions

=======
Suggestion 1

def myfunc(str1: str):
    new_str = ""
    for i in str1.split():
        if len(i) >= 5:
            new_str += i[::-1] + " "
        else:
            new_str += i + " "
    return new_str.strip()

=======
Suggestion 2

def myfunc(str1: str):
    return ' '.join([word[::-1] if len(word) >= 5 else word for word in str1.split(' ')])

=======
Suggestion 3

def myfunc(str1: str):
    str1 = str1.split(' ')
    for i in range(len(str1)):
        if len(str1[i]) >= 5:
            str1[i] = str1[i][::-1]
    return ' '.join(str1)

=======
Suggestion 4

def myfunc(str1: str):
    str1 = str1.split(" ")
    for i in range(len(str1)):
        if len(str1[i]) >= 5:
            str1[i] = str1[i][::-1]
    return " ".join(str1)

=======
Suggestion 5

def myfunc(str1: str):
    str1 = str1.split()
    for i in range(len(str1)):
        if len(str1[i]) >= 5:
            str1[i] = str1[i][::-1]
    return " ".join(str1)

=======
Suggestion 6

def myfunc(str1: str):
    str2 = str1.split()
    for i in range(len(str2)):
        if len(str2[i]) >= 5:
            str2[i] = str2[i][::-1]
    return ' '.join(str2)

=======
Suggestion 7

def myfunc(str1: str):
    str1 = str1.split()
    for i in range(len(str1)):
        if len(str1[i]) >= 5:
            str1[i] = str1[i][::-1]
    return ' '.join(str1)

=======
Suggestion 8

def myfunc(str1: str):
    return ' '.join([i[::-1] if len(i) >= 5 else i for i in str1.split()])
