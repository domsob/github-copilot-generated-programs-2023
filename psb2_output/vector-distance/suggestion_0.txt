Synthesizing 10/10 solutions (Duplicates hidden)

=======
Suggestion 1

def myfunc(list1: list, list2: list):
    return sum((x-y)**2 for x,y in zip(list1,list2))**(1/2)

=======
Suggestion 2

def myfunc(list1: list, list2: list):
    sum = 0
    for i in range(len(list1)):
        sum += (list1[i] - list2[i])**2
    return sum**0.5

=======
Suggestion 3

def myfunc(list1: list, list2: list):
    # YOUR CODE HERE
    return 0.0

=======
Suggestion 4

def myfunc(list1: list, list2: list):
    dist = 0
    for i in range(len(list1)):
        dist += (list1[i]-list2[i])**2
    return dist**0.5

=======
Suggestion 5

def myfunc(list1: list, list2: list):
    sum = 0
    for i in range(len(list1)):
        sum += (list1[i] - list2[i])**2
    return sum**(1/2)

=======
Suggestion 6

def myfunc(list1: list, list2: list):
    import math
    sum = 0
    for i in range(len(list1)):
        sum += (list1[i] - list2[i]) ** 2
    return math.sqrt(sum)

=======
Suggestion 7

def myfunc(list1: list, list2: list):
    if len(list1) != len(list2):
        return -1
    else:
        sum = 0
        for i in range(len(list1)):
            sum += (list1[i] - list2[i]) ** 2
        return sum ** 0.5

=======
Suggestion 8

def myfunc(list1: list, list2: list):
    return sum((x-y)**2 for x, y in zip(list1, list2))**0.5
