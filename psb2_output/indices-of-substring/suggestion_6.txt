Synthesizing 10/10 solutions

=======
Suggestion 1

def myfunc(str1: str, str2: str):
    if str1 == "" or str2 == "":
        return []
    if len(str1) < len(str2):
        return []
    if str1 == str2:
        return [0]
    result = []
    for i in range(len(str1) - len(str2) + 1):
        if str1[i:i+len(str2)] == str2:
            result.append(i)
    return result

=======
Suggestion 2

def myfunc(str1: str, str2: str):
    l1 = len(str1)
    l2 = len(str2)
    res = []
    for i in range(l1-l2+1):
        if str1[i:i+l2] == str2:
            res.append(i)
    return res

=======
Suggestion 3

def myfunc(str1: str, str2: str):
    res = []
    for i in range(len(str1)):
        if str1[i] == str2[0]:
            if str1[i:i+len(str2)] == str2:
                res.append(i)
    return res

=======
Suggestion 4

def myfunc(str1: str, str2: str):
    result = []
    if str1 is None or str2 is None:
        return result
    if str2 == '':
        return result
    for i in range(len(str1)):
        if str1[i] == str2[0]:
            j = 0
            while j < len(str2) and i+j < len(str1) and str1[i+j] == str2[j]:
                j += 1
            if j == len(str2):
                result.append(i)
    return result

=======
Suggestion 5

def myfunc(str1: str, str2: str):
    result = []
    for i in range(len(str1)):
        if str1[i:i+len(str2)] == str2:
            result.append(i)
    return result

=======
Suggestion 6

def myfunc(str1: str, str2: str):
    if not str1 or not str2:
        return []
    if len(str2) > len(str1):
        return []
    if str1 == str2:
        return list(range(len(str1)))
    result = []
    for i in range(len(str1) - len(str2) + 1):
        if str1[i:i+len(str2)] == str2:
            result.append(i)
    return result

=======
Suggestion 7

def myfunc(str1: str, str2: str):
    result = []
    if str1 == "" or str2 == "":
        return result
    for i in range(len(str1)):
        if str1[i] == str2[0]:
            if str1[i:i+len(str2)] == str2:
                result.append(i)
    return result

=======
Suggestion 8

def myfunc(str1: str, str2: str):
    result = []
    if len(str2) > len(str1):
        return result
    else:
        for i in range(len(str1) - len(str2) + 1):
            if str2 == str1[i:i+len(str2)]:
                result.append(i)
        return result

=======
Suggestion 9

def myfunc(str1: str, str2: str):
    # Write your code here
    res = []
    i = 0
    while i < len(str1):
        if str1[i] == str2[0]:
            j = 0
            k = i
            while j < len(str2) and k < len(str1):
                if str1[k] != str2[j]:
                    break
                k += 1
                j += 1
            if j == len(str2):
                res.append(i)
                i += len(str2)
            else:
                i += 1
        else:
            i += 1
    return res

=======
Suggestion 10

def myfunc(str1: str, str2: str):
    result = []
    if len(str2) > len(str1):
        return result
    for i in range(len(str1)-len(str2)+1):
        if str1[i:i+len(str2)] == str2:
            result.append(i)
    return result
