Synthesizing 8/10 solutions

=======
Suggestion 1

def myfunc(str1: str, str2: str):
    # Write your code here
    res = []
    if len(str2) > len(str1):
        return res
    for i in range(len(str1)-len(str2)+1):
        if str1[i:i+len(str2)] == str2:
            res.append(i)
    return res

=======
Suggestion 2

def myfunc(str1: str, str2: str):
    result = []
    if str1 is None or str2 is None:
        return result
    if len(str2) == 0:
        return result
    if len(str1) == 0:
        return result
    i = 0
    while i < len(str1):
        if str1[i] == str2[0]:
            if str1[i:i+len(str2)] == str2:
                result.append(i)
                i += len(str2)
            else:
                i += 1
        else:
            i += 1
    return result

=======
Suggestion 3

def myfunc(str1: str, str2: str):
    # Write your code here
    if str1 == "" or str2 == "":
        return []
    if str2 not in str1:
        return []
    if str1 == str2:
        return [0]
    res = []
    for i in range(len(str1)-len(str2)+1):
        if str1[i:i+len(str2)] == str2:
            res.append(i)
    return res

=======
Suggestion 4

def myfunc(str1: str, str2: str):
    if str1 == '' or str2 == '':
        return []
    if len(str2) > len(str1):
        return []
    if str1 == str2:
        return [0]
    res = []
    for i in range(len(str1)-len(str2)+1):
        if str1[i:i+len(str2)] == str2:
            res.append(i)
    return res

=======
Suggestion 5

def myfunc(str1: str, str2: str):
    if not str1 or not str2:
        return []
    if len(str1) < len(str2):
        return []
    if str2 not in str1:
        return []
    str2_len = len(str2)
    str1_len = len(str1)
    res = []
    for i in range(str1_len - str2_len + 1):
        if str1[i:i+str2_len] == str2:
            res.append(i)
    return res

=======
Suggestion 6

def myfunc(str1: str, str2: str):
    if str1 is None or str2 is None:
        return []
    if len(str1) == 0 or len(str2) == 0:
        return []
    if len(str2) > len(str1):
        return []
    if len(str2) == len(str1):
        if str2 == str1:
            return [0]
        else:
            return []
    ret = []
    for i in range(len(str1)-len(str2)+1):
        if str1[i:i+len(str2)] == str2:
            ret.append(i)
    return ret

=======
Suggestion 7

def myfunc(str1: str, str2: str):
    if len(str1) < len(str2):
        return []
    if str1 == str2:
        return [0]
    res = []
    for i in range(len(str1) - len(str2) + 1):
        if str1[i:i + len(str2)] == str2:
            res.append(i)
    return res

=======
Suggestion 8

def myfunc(str1: str, str2: str):
    if len(str1) < len(str2):
        return []
    res = []
    for i in range(len(str1) - len(str2) + 1):
        if str1[i:i+len(str2)] == str2:
            res.append(i)
    return res
