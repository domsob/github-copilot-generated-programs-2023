Synthesizing 10/10 solutions

=======
Suggestion 1

def myfunc(str1: str, str2: str):
    # your code here
    res = []
    for i in range(len(str1)):
        if str1[i:i+len(str2)] == str2:
            res.append(i)
    return res

=======
Suggestion 2

def myfunc(str1: str, str2: str):
    result = []
    if len(str1) < len(str2):
        return result
    for i in range(len(str1)):
        if str1[i:i+len(str2)] == str2:
            result.append(i)
    return result

=======
Suggestion 3

def myfunc(str1: str, str2: str):
    n = len(str1)
    m = len(str2)

    if m > n:
        return []

    result = []
    for i in range(n - m + 1):
        if str1[i:i + m] == str2:
            result.append(i)

    return result

=======
Suggestion 4

def myfunc(str1: str, str2: str):
    str1 = str1.lower()
    str2 = str2.lower()
    res = []
    for i in range(len(str1)):
        if str1[i:i+len(str2)] == str2:
            res.append(i)
    return res

=======
Suggestion 5

def myfunc(str1: str, str2: str):
    # Write your code here
    if len(str2) > len(str1):
        return []
    if len(str2) == len(str1):
        if str2 == str1:
            return [0]
        else:
            return []
    res = []
    i = 0
    while i < len(str1):
        if str1[i:i+len(str2)] == str2:
            res.append(i)
            i += len(str2)
        else:
            i += 1
    return res

=======
Suggestion 6

def myfunc(str1: str, str2: str):
    if len(str1) < len(str2):
        return []
    if str1 == str2:
        return [0]
    result = []
    for i in range(len(str1) - len(str2) + 1):
        if str1[i: i + len(str2)] == str2:
            result.append(i)
    return result

=======
Suggestion 7

def myfunc(str1: str, str2: str):
    # Write your code here
    # find the index of the first occurence of str2 in str1
    # find the index of the next occurence of str2 in str1
    # continue until no more occurences of str2 in str1
    # return the list of indices
    # if str2 is not found in str1, return empty list
    # if str2 is empty, return empty list
    if len(str2) == 0:
        return []
    if len(str1) == 0:
        return []
    if str2 not in str1:
        return []
    result = []
    i = 0
    while str2 in str1[i:]:
        result.append(str1.index(str2, i))
        i = str1.index(str2, i) + 1
    return result

=======
Suggestion 8

def myfunc(str1: str, str2: str):
    res = []
    for i in range(len(str1)):
        if str1[i:].startswith(str2):
            res.append(i)
    return res

=======
Suggestion 9

def myfunc(str1: str, str2: str):
    res = []
    for i in range(len(str1)):
        if str1[i:i+len(str2)] == str2:
            res.append(i)
    return res

=======
Suggestion 10

def myfunc(str1: str, str2: str):
    if str1 == "" or str2 == "":
        return []
    if len(str1) < len(str2):
        return []
    if str1 == str2:
        return [0]
    if len(str1) == len(str2):
        return []
    res = []
    for i in range(len(str1) - len(str2) + 1):
        if str1[i:i+len(str2)] == str2:
            res.append(i)
    return res
