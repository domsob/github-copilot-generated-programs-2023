Synthesizing 10/10 solutions (Duplicates hidden)

=======
Suggestion 1

def myfunc(str1: str):
    if len(str1) % 2 == 0:
        return str1[len(str1)//2 - 1] + str1[len(str1)//2]
    else:
        return str1[len(str1)//2]

=======
Suggestion 2

def myfunc(str1: str):
    if len(str1) % 2 == 0:
        return str1[(len(str1)//2)-1] + str1[(len(str1)//2)]
    else:
        return str1[(len(str1)//2)]

=======
Suggestion 3

def myfunc(str1: str):
    if len(str1) % 2 == 0:
        return str1[int(len(str1)/2)-1:int(len(str1)/2)+1]
    else:
        return str1[int(len(str1)/2)]

=======
Suggestion 4

def myfunc(str1: str):
    if len(str1) % 2 == 0:
        return str1[int(len(str1) / 2) - 1] + str1[int(len(str1) / 2)]
    else:
        return str1[int(len(str1) / 2)]

=======
Suggestion 5

def myfunc(str1: str):
    if len(str1) % 2 == 0:
        return str1[int(len(str1)/2-1)] + str1[int(len(str1)/2)]
    else:
        return str1[int(len(str1)/2)]

=======
Suggestion 6

def myfunc(str1: str):
    if len(str1) % 2 == 0:
        return str1[int(len(str1)/2-1):int(len(str1)/2+1)]
    else:
        return str1[int(len(str1)/2)]

=======
Suggestion 7

def myfunc(str1: str):
    len1 = len(str1)
    if len1 % 2 != 0:
        return str1[int(len1/2)]
    else:
        return str1[int(len1/2)-1:int(len1/2)+1]
