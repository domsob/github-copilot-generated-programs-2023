Synthesizing 10/10 solutions

=======
Suggestion 1

def myfunc(list1: list):
    return sum([int((x/3)-2) for x in list1])

=======
Suggestion 2

def myfunc(list1: list):
    # Write your code here
    sum1 = 0
    for i in list1:
        sum1 = sum1 + i//3 - 2
    return sum1

=======
Suggestion 3

def myfunc(list1: list):
    sum = 0
    for i in list1:
        sum += (i//3)-2
    return sum

=======
Suggestion 4

def myfunc(list1: list):
    new_list = []
    for i in list1:
        new_list.append((i//3)-2)
    return sum(new_list)

=======
Suggestion 5

def myfunc(list1: list):
    list2 = []
    for i in list1:
        list2.append(i//3-2)
    return sum(list2)

=======
Suggestion 6

def myfunc(list1: list):
    new_list = []
    for i in list1:
        new_list.append((i//3)-2)
    print(sum(new_list))

=======
Suggestion 7

def myfunc(list1: list):
    return sum(list(map(lambda x: x//3 - 2, list1)))

=======
Suggestion 8

def myfunc(list1: list):
    return sum([int(x/3) - 2 for x in list1])

=======
Suggestion 9

def myfunc(list1: list):
    sum = 0
    for i in range(len(list1)):
        sum += list1[i] // 3 - 2
    return sum

=======
Suggestion 10

def myfunc(list1: list):
    return sum([i//3-2 for i in list1])
